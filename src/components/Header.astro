---
import DarkModeToggle from './DarkModeToggle.astro';
import MobileDrawer from './MobileDrawer.astro';

const links = [
  {
    href: '/',
    text: 'Home',
  },
  {
    href: '/projects',
    text: 'Projects',
  },
  {
    href: '/blog',
    text: 'Blog',
  },
  {
    href: '/about',
    text: 'Bio',
  },
];

// Get the current path
const currentPath = Astro.url.pathname;
// Normalize the path for comparison (handle root path specially)
const normalizedPath = currentPath === '/' ? '/' : (currentPath.split('/')?.[1] ?? '');
---

<header class="header">
  <nav class="header-nav">
    <div class="nav-content">
      <ul class="header-nav-list" data-aos="fade-in">
        {
          links.map((link) => {
            const isActive =
              link.href === '/'
                ? normalizedPath === '/'
                : normalizedPath.startsWith(link.href.substring(1));
            console.log(normalizedPath, link.href, isActive);
            return (
              <li>
                <a href={link.href} class:list={[{ active: isActive }]}>
                  {link.text}
                </a>
              </li>
            );
          })
        }
      </ul>
      <div class="theme-toggle-wrapper desktop-only">
        <DarkModeToggle />
      </div>
    </div>
  </nav>
</header>

<MobileDrawer>
  <ul class="mobile-nav-list" slot="navigation">
    {
      links.map((link) => {
        const isActive =
          link.href === '/' ? normalizedPath === '/' : normalizedPath.startsWith(link.href);
        return (
          <li>
            <a href={link.href} class:list={[{ active: isActive }]}>
              {link.text}
            </a>
          </li>
        );
      })
    }
  </ul>
  <div slot="footer">
    <DarkModeToggle />
  </div>
</MobileDrawer>

<style>
  .header {
    padding: 1rem 0;
    background-color: var(--color-header-bg);
    box-shadow: 0 2px 4px var(--color-shadow);
    position: sticky;
    top: 0;
    z-index: 100;

    @media (max-width: 768px) {
      box-shadow: none;
      padding: 0;
    }
  }

  .header-nav {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .nav-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .header-nav-list {
    display: flex;
    align-items: center;
    gap: 2rem;
    list-style: none;
    margin: 0;
    padding: 0;

    li {
      margin: 0;
    }

    a {
      color: var(--color-text);
      text-decoration: underline;
      font-weight: 500;
      transition: all 0.2s ease;
      padding: 0.5rem 1rem;
      border-radius: 4px;

      &:hover {
        background-color: var(--color-shadow);
      }

      &.active {
        background-color: var(--color-accent);
        font-weight: 700;
        text-decoration: none;
      }
    }
  }

  .theme-toggle-wrapper {
    display: flex;
    align-items: center;
    margin-left: auto;
    padding-left: 2rem;
  }

  .mobile-nav-list {
    list-style: none;
    padding: 0;
    margin: 2rem 0;
    text-align: center;
  }

  .mobile-nav-list li {
    margin-bottom: 1.5rem;
  }

  .mobile-nav-list a {
    color: var(--color-text);
    text-decoration: none;
    font-size: 1.5rem;
    font-weight: 500;
    padding: 1rem;
    display: block;
    transition: color 0.2s ease;
    border-radius: 8px;

    &:hover {
      color: var(--color-text-light);
      background-color: var(--color-code-bg);
    }

    &.active {
      background-color: var(--color-code-bg);
      color: var(--color-text-light);
      font-weight: 700;
    }
  }

  @media (max-width: 768px) {
    .header-nav-list,
    .desktop-only {
      display: none;
    }

    .nav-content {
      justify-content: flex-end;
    }
  }
</style>
