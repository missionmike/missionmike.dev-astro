---
type Photo = {
  src: string;
  alt: string;
  caption: string;
  size?: 'small' | 'medium' | 'large'; // Controls the grid span
};

const photos: Photo[] = [
  {
    src: '/static/images/mosaic/family-gaming.jpg',
    alt: 'Family gaming setup and entertainment area',
    caption: 'Family gaming setup and entertainment area',
    size: 'large',
  },
  {
    src: '/static/images/mosaic/family-breakfast.jpg',
    alt: 'Family breakfast time',
    caption: 'Family breakfast time',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/family-gaming-photo-with-memphis.jpg',
    alt: 'Gaming session with Memphis',
    caption: 'Gaming session with Memphis',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/office-dogs.jpg',
    alt: 'Office dogs keeping me company while working',
    caption: 'Office dogs keeping me company while working',
    size: 'small',
  },
  {
    src: '/static/images/mosaic/dark-mode.jpg',
    alt: 'Dark mode development setup',
    caption: 'Dark mode development setup',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/sound-board.jpg',
    alt: 'Audio mixing and sound board setup',
    caption: 'Audio mixing and sound board setup',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/video-editing.jpg',
    alt: 'Video editing workspace',
    caption: 'Video editing workspace',
    size: 'large',
  },
  {
    src: '/static/images/mosaic/sound-booth-volunteering.jpg',
    alt: 'Volunteering at the sound booth',
    caption: 'Volunteering at the sound booth',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/old-office-space.jpg',
    alt: 'Previous office setup',
    caption: 'Previous office setup',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/michael-and-memphis.jpg',
    alt: 'Michael and Memphis',
    caption: 'Michael and Memphis',
    size: 'small',
  },
  {
    src: '/static/images/mosaic/office-rearrange.jpg',
    alt: 'Office space rearrangement',
    caption: 'Office space rearrangement',
    size: 'large',
  },
  {
    src: '/static/images/mosaic/family-photo-shoot.jpg',
    alt: 'Family photo shoot',
    caption: 'Family photo shoot',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/playing-wrecked.jpg',
    alt: 'Playing Wrecked game',
    caption: 'Playing Wrecked game',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/melody-fishing.jpg',
    alt: 'Melody fishing',
    caption: 'Melody fishing',
    size: 'small',
  },
  {
    src: '/static/images/mosaic/dad-and-memphis.jpg',
    alt: 'Dad and Memphis together',
    caption: 'Dad and Memphis together',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/remote-control-gummy.jpg',
    alt: 'Remote control gummy',
    caption: 'Remote control gummy',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/cleaning-max-mouth.jpg',
    alt: "Cleaning Max's mouth",
    caption: "Cleaning Max's mouth",
    size: 'small',
  },
  {
    src: '/static/images/mosaic/youtube-thumbnail-sleepy-slawths.jpg',
    alt: 'YouTube thumbnail for Sleepy Slawths',
    caption: 'YouTube thumbnail for Sleepy Slawths',
    size: 'medium',
  },
  {
    src: '/static/images/mosaic/happy-memphis-with-grandma.jpg',
    alt: 'Happy Memphis with Grandma',
    caption: 'Happy Memphis with Grandma',
    size: 'small',
  },
]; // All photos now correspond to actual files in the directory
---

<div class="photo-mosaic">
  <div class="column">
    {
      photos
        .filter((_, i) => i % 3 === 0)
        .map((photo) => (
          <div class={`photo-tile ${photo.size || 'small'}`} data-aos="fade-in">
            <button
              class="photo-button"
              data-src={photo.src}
              data-alt={photo.alt}
              data-caption={photo.caption}
            >
              <img src={photo.src} alt={photo.alt} class="photo" />
            </button>
          </div>
        ))
    }
  </div>
  <div class="column">
    {
      photos
        .filter((_, i) => i % 3 === 1)
        .map((photo) => (
          <div class={`photo-tile ${photo.size || 'small'}`} data-aos="fade-in">
            <button
              class="photo-button"
              data-src={photo.src}
              data-alt={photo.alt}
              data-caption={photo.caption}
            >
              <img src={photo.src} alt={photo.alt} class="photo" />
            </button>
          </div>
        ))
    }
  </div>
  <div class="column">
    {
      photos
        .filter((_, i) => i % 3 === 2)
        .map((photo) => (
          <div class={`photo-tile ${photo.size || 'small'}`} data-aos="fade-in">
            <button
              class="photo-button"
              data-src={photo.src}
              data-alt={photo.alt}
              data-caption={photo.caption}
            >
              <img src={photo.src} alt={photo.alt} class="photo" />
            </button>
          </div>
        ))
    }
  </div>
</div>

<!-- Modal -->
<div id="photoModal" class="modal">
  <div class="modal-content">
    <span class="close-button">&times;</span>
    <button class="nav-button prev">&lt;</button>
    <button class="nav-button next">&gt;</button>
    <div class="slide-container">
      <img id="modalImage" src="" alt="" />
    </div>
    <p id="modalCaption" class="caption"></p>
  </div>
</div>

<script>
  let currentPhotoIndex = 0;
  let photoButtons: NodeListOf<HTMLButtonElement>;

  function initPhotoModal() {
    photoButtons = document.querySelectorAll('.photo-button');
    const modal = document.getElementById('photoModal');
    const closeButton = modal?.querySelector('.close-button');
    const prevButton = modal?.querySelector('.nav-button.prev');
    const nextButton = modal?.querySelector('.nav-button.next');

    // Add click handlers to all photo buttons
    photoButtons.forEach((button, index) => {
      button.addEventListener('click', () => {
        currentPhotoIndex = index;
        openModal();
      });
    });

    // Add modal controls
    closeButton?.addEventListener('click', closeModal);
    prevButton?.addEventListener('click', () => navigateSlide(-1));
    nextButton?.addEventListener('click', () => navigateSlide(1));

    // Close modal when clicking outside
    window.addEventListener('click', (event) => {
      if (event.target === modal) {
        closeModal();
      }
    });

    // Keyboard navigation
    window.addEventListener('keydown', (event) => {
      if (modal?.style.display === 'flex') {
        switch (event.key) {
          case 'ArrowLeft':
            navigateSlide(-1);
            break;
          case 'ArrowRight':
            navigateSlide(1);
            break;
          case 'Escape':
            closeModal();
            break;
        }
      }
    });
  }

  function openModal() {
    const modal = document.getElementById('photoModal');
    if (!modal) return;

    const currentButton = photoButtons[currentPhotoIndex];
    const modalImg = document.getElementById('modalImage') as HTMLImageElement;
    const modalCaption = document.getElementById('modalCaption');

    if (modalImg && modalCaption && currentButton.dataset.src) {
      modal.style.display = 'flex';
      modalImg.src = currentButton.dataset.src;
      modalImg.alt = currentButton.dataset.alt || '';
      modalCaption.textContent = currentButton.dataset.caption || '';
    }
  }

  function closeModal() {
    const modal = document.getElementById('photoModal');
    if (modal) {
      modal.style.display = 'none';
    }
  }

  function navigateSlide(direction: number) {
    currentPhotoIndex = (currentPhotoIndex + direction + photoButtons.length) % photoButtons.length;
    openModal();
  }

  // Initialize when the DOM is ready
  document.addEventListener('DOMContentLoaded', initPhotoModal);
</script>

<style>
  .photo-mosaic {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    width: 100%;
  }

  .column {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .photo-tile {
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    width: 100%;
  }

  .photo-tile.small {
    aspect-ratio: 1;
  }

  .photo-tile.medium {
    aspect-ratio: 4/5;
  }

  .photo-tile.large {
    aspect-ratio: 3/4;
  }

  @media (max-width: 1024px) {
    .photo-mosaic {
      grid-template-columns: 1fr 1fr;
      gap: 0.5rem;
    }
  }

  .photo-button {
    width: 100%;
    height: 100%;
    padding: 0;
    border: none;
    background: none;
    cursor: pointer;
  }

  .photo {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-primary);
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }

  .modal-content {
    position: relative;
    max-width: 90%;
    max-height: 90vh;
    margin: auto;
    display: flex;
    flex-direction: column;
    align-items: center;
    background: var(--color-background-gradient);
  }

  .close-button {
    position: absolute;
    top: -40px;
    right: 0;
    color: var(--color-text);
    font-size: 30px;
    cursor: pointer;
  }

  .slide-container {
    position: relative;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: var(--color-background-gradient);
    border: none;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    font-size: 24px;
    color: var(--color-text);
    cursor: pointer;
    z-index: 2;
    transition: background-color 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .nav-button:hover {
    background: var(--color-text);
  }

  .prev {
    left: -50px;
  }

  .next {
    right: -50px;
  }

  #modalImage {
    max-width: 100%;
    max-height: 80vh;
    object-fit: contain;
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
  }

  .caption {
    color: var(--color-text);
    text-align: center;
    padding: 1rem;
    margin: 0;
    background-color: var(--color-background);
    width: 100%;
    opacity: 1;
    transition: opacity 0.2s ease-in-out;
  }

  @media (max-width: 768px) {
    .nav-button {
      width: 30px;
      height: 30px;
      font-size: 18px;
    }

    .prev {
      left: 10px;
    }

    .next {
      right: 10px;
    }
  }
</style>
