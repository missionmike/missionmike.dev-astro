---
import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import BlogPreview from '../../../components/blog/BlogPreview.astro';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  const tags = new Set<string>(
    posts.flatMap((post: CollectionEntry<'posts'>) =>
      (post.data.tags || []).map((t: string) => t.toLowerCase())
    )
  );

  return Array.from(tags).map((tag) => ({
    params: { tag: tag.toLowerCase() },
    props: {
      tag: tag.toLowerCase(),
      posts: posts.filter((post: CollectionEntry<'posts'>) => {
        const postTags = (post.data.tags || []).map((t: string) => t.toLowerCase());
        const match = postTags.includes(tag.toLowerCase());

        return match;
      }) as CollectionEntry<'posts'>[],
    },
  }));
}

const { tag, posts } = Astro.props;
const sortedPosts = posts.sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<Layout
  title={`${tag} Posts | Mission Mike's Blog`}
  description={`Read all posts tagged with ${tag} on Mission Mike's blog.`}
>
  <div class="container py-5">
    <h1 class="mb-4">Posts tagged with "{tag}"</h1>
    <div class="row">
      {
        sortedPosts.map((post, index) => (
          <div class="col-md-6 mb-4" data-aos="fade-up" data-aos-delay={index * 100}>
            <BlogPreview
              post={{
                title: post.data.title,
                date: post.data.date,
                summary: post.data.summary || '',
                path: `/blog/${post.slug}`,
                tags: post.data.tags || [],
                featuredImage: post.data.featuredImage,
              }}
            />
          </div>
        ))
      }
    </div>
  </div>
</Layout>
