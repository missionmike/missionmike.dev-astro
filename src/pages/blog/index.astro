---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import BlogPreview from '../../components/blog/BlogPreview.astro';
import type { CollectionEntry } from 'astro:content';

type Post = CollectionEntry<'posts'>;

const posts = await getCollection('posts');
const sortedPosts = posts.sort(
  (a: Post, b: Post) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);

// Separate posts into current and legacy
const currentPosts = sortedPosts.filter((post: Post) => !post.data.tags?.includes('Legacy'));
const legacyPosts = sortedPosts.filter((post: Post) => post.data.tags?.includes('Legacy'));
---

<Layout
  title="Blog | Mission Mike"
  description="Read about software development, career growth, and more from Mission Mike."
>
  <div class="container py-5">
    <h1 class="mb-4">Blog Posts</h1>

    {/* Current Posts Section */}
    <div class="row mb-5">
      {
        currentPosts.map((post: Post) => (
          <div class="col-md-6 mb-5">
            <BlogPreview
              post={{
                title: post.data.title,
                date: post.data.date,
                updated: post.data.updated,
                summary: post.data.summary || '',
                path: `/blog/${post.slug}`,
                tags: post.data.tags || [],
                featuredImage: post.data.featuredImage,
              }}
            />
          </div>
        ))
      }
    </div>

    {/* Legacy Posts Section */}
    {
      legacyPosts.length > 0 && (
        <>
          <div class="legacy-section">
            <h2 class="mb-3">Legacy Content Archive</h2>
            <p class="text-muted mb-4">
              These posts contain older content that, while potentially outdated, are preserved for
              historical reference. They may discuss deprecated technologies or outdated practices,
              but remain available to track the evolution of my work and thoughts over time.
            </p>
            <div class="row legacy-posts">
              {legacyPosts.map((post: Post) => (
                <div class="col-md-6 mb-5 legacy-post">
                  <BlogPreview
                    post={{
                      title: post.data.title,
                      date: post.data.date,
                      updated: post.data.updated,
                      summary: post.data.summary || '',
                      path: `/blog/${post.slug}`,
                      tags: post.data.tags || [],
                      featuredImage: post.data.featuredImage,
                    }}
                  />
                </div>
              ))}
            </div>
          </div>
        </>
      )
    }
  </div>
</Layout>

<style>
  .legacy-section {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--color-border);
  }

  .legacy-post {
    opacity: 0.8;
    transition: opacity 0.2s ease-in-out;

    &:hover {
      opacity: 1;
    }
  }
</style>
